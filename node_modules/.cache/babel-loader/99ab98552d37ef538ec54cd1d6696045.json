{"ast":null,"code":"var _jsxFileName = \"D:\\\\019 React js\\\\todo-list\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { AddTodoForm } from './AddTodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  text: 'Walk the dog',\n  complete: false\n}, {\n  text: 'Write app',\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo = selectedTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"fwNl6XqyxVtmHgIsEkv4Dk+HlV4=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoList","AddTodoForm","initialTodos","text","complete","App","todos","setTodos","toggleTodo","selectedTodo","newTodos","map","todo"],"sources":["D:/019 React js/todo-list/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\nimport {TodoList} from './TodoList';\nimport {AddTodoForm} from './AddTodoForm';\n\nconst initialTodos: Todo[] =[\n  {\n    text: 'Walk the dog',\n    complete: false,\n  },\n  {\n    text: 'Write app',\n    complete: true,\n  },\n];\n\nfunction App(){\n  const [todos,setTodos]=useState(initialTodos);\n\n  const toggleTodo=(selectedTodo:Todo)=>{\n    const newTodos=todos.map((todo)=>{\n      if(todo===selectedTodo){\n        return{\n          ...todo,\n          complete:!todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <AddTodoForm/>\n    </>\n    );\n  \n  \n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;;AAEA,MAAMC,YAAoB,GAAE,CAC1B;EACEC,IAAI,EAAE,cADR;EAEEC,QAAQ,EAAE;AAFZ,CAD0B,EAK1B;EACED,IAAI,EAAE,WADR;EAEEC,QAAQ,EAAE;AAFZ,CAL0B,CAA5B;;AAWA,SAASC,GAAT,GAAc;EAAA;;EACZ,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAACG,YAAD,CAA/B;;EAEA,MAAMM,UAAU,GAAEC,YAAD,IAAqB;IACpC,MAAMC,QAAQ,GAACJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAQ;MAC/B,IAAGA,IAAI,KAAGH,YAAV,EAAuB;QACrB,OAAM,EACJ,GAAGG,IADC;UAEJR,QAAQ,EAAC,CAACQ,IAAI,CAACR;QAFX,CAAN;MAID;;MACD,OAAOQ,IAAP;IACD,CARc,CAAf;IASAL,QAAQ,CAACG,QAAD,CAAR;EACD,CAXD;;EAaA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEJ,KAAjB;MAAwB,UAAU,EAAEE;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAQD;;GAxBQH,G;;KAAAA,G;AAwBR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}